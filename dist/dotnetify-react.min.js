var dotnetify="undefined"==typeof dotnetify?{}:dotnetify;!function(a){"function"==typeof define&&define.amd?define(["react","jquery","signalr"],a):"object"==typeof exports&&"object"==typeof module?("undefined"==typeof window.jQuery&&(window.jQuery=require("jquery")),module.exports=a(require("react"),require("jquery"),require("signalr"))):a(React,jQuery)}(function(a,b){function c(a,c,d,e,f){this.$vmId=a,this.$component=c,this.$vmArg=f,this.$requested=!1,this.$loaded=!1,this.$itemKey={},"function"!=typeof d&&(this.$vmArg=d,d=function(){return c.state},e=function(a){c.setState(a)}),c.props.hasOwnProperty("vmArg")&&(this.$vmArg=b.extend(this.$vmArg,c.props.vmArg)),this.State=function(a){return"undefined"==typeof a?d():e(a)};for(var g in dotnetify.react.plugins){var h=dotnetify.react.plugins[g];h.hasOwnProperty("$inject")&&h.$inject(this)}}return function(a,b,c){"use strict";function d(b,c){return function(){c.apply(b,a.makeArray(arguments))}}function e(b,c){var e,f,g,h,i;for(e in b)if(b.hasOwnProperty(e)){if(f=b[e],!f.hubName)continue;i=c?f.on:f.off;for(g in f.client)if(f.client.hasOwnProperty(g)){if(h=f.client[g],!a.isFunction(h))continue;i.call(f,g,d(f,h))}}}if("function"!=typeof a.signalR)throw new Error("SignalR: SignalR is not loaded. Please ensure jquery.signalR-x.js is referenced before ~/signalr/js.");var f=a.signalR;a.hubConnection.prototype.createHubProxies=function(){var b={};return this.starting(function(){e(b,!0),this._registerSubscribedHubs()}).disconnected(function(){e(b,!1)}),b.dotNetifyHub=this.createHubProxy("dotNetifyHub"),b.dotNetifyHub.client={},b.dotNetifyHub.server={dispose_VM:function(c){return b.dotNetifyHub.invoke.apply(b.dotNetifyHub,a.merge(["Dispose_VM"],a.makeArray(arguments)))},request_VM:function(c,d){return b.dotNetifyHub.invoke.apply(b.dotNetifyHub,a.merge(["Request_VM"],a.makeArray(arguments)))},update_VM:function(c,d){return b.dotNetifyHub.invoke.apply(b.dotNetifyHub,a.merge(["Update_VM"],a.makeArray(arguments)))}},b},f.hub=a.hubConnection("/signalr",{useDefaultPath:!1}),a.extend(f,f.hub.createHubProxies())}(b,window),dotnetify=b.extend(dotnetify,{hub:null,hubServer:b.connection.dotNetifyHub.server,hubOptions:{transport:["webSockets","longPolling"]},debug:!0,debugFn:null,offline:!1,isOffline:!0,offlineTimeout:5e3,offlineCacheFn:null,_connectRetry:0,isConnected:function(){return b.connection.hub.state==b.signalR.connectionState.connected}}),dotnetify.react=b.extend(dotnetify.hasOwnProperty("react")?dotnetify.react:{},{version:"1.0.1-beta",viewModels:{},plugins:{},init:function(){var a=dotnetify.react,c=function(){for(var b in a.viewModels)a.viewModels[b].$requested||a.viewModels[b].$request()};if(null===dotnetify.hub){var d=b.connection.dotNetifyHub;d.client.response_VM=function(b,c){return"403"==c?void console.error("Unauthorized access to "+b):void(a.viewModels.hasOwnProperty(b)?a.viewModels[b].$update(c):d.server.dispose_VM(b))};var e=function(){var a="undefined"==typeof dotnetify.hubOptions?b.connection.hub.start():b.connection.hub.start(dotnetify.hubOptions);return a.done(function(){dotnetify._connectRetry=0,c()}).fail(function(a){console.error(a)}),setTimeout(function(){dotnetify.offline&&!dotnetify.isConnected()&&(c(),dotnetify.isOffline=!0,b(document).trigger("offline",dotnetify.isOffline))},dotnetify.offlineTimeout),a};dotnetify.hub=e(),b.connection.hub.disconnected(function(){setTimeout(function(){dotnetify.hub=e()},5e3*dotnetify._connectRetry+500),dotnetify._connectRetry<3&&dotnetify._connectRetry++}),b.connection.hub.stateChanged(function(a){var c={0:"connecting",1:"connected",2:"reconnecting",4:"disconnected"};console.log("SignalR: "+c[a.newState]);var d=1!=a.newState;dotnetify.isOffline!=d&&(dotnetify.isOffline=d,b(document).trigger("offline",dotnetify.isOffline))})}else dotnetify.isConnected()?dotnetify.hub.done(c):dotnetify.offline&&c()},connect:function(a,b,d,e,f){var g=dotnetify.react;return g.viewModels.hasOwnProperty(a)?console.error("Component is attempting to connect to an already active '"+a+"'.  If it's from a dismounted component, you must add vm.$destroy to componentWillUnmount()."):g.viewModels[a]=new c(a,b,d,e,f),dotnetify.react.init(),g.viewModels[a]}}),c.prototype.$destroy=function(){for(var a in dotnetify.react.plugins){var b=dotnetify.react.plugins[a];"function"==typeof b.$destroy&&b.$destroy.apply(this)}dotnetify.hubServer.dispose_VM(this.$vmId),delete dotnetify.react.viewModels[this.$vmId]},c.prototype.$dispatch=function(a){if(dotnetify.isConnected())try{dotnetify.hubServer.update_VM(this.$vmId,a),dotnetify.debug&&(console.log("["+this.$vmId+"] sent> "),console.log(a),null!=dotnetify.debugFn&&dotnetify.debugFn(this.$vmId,"sent",a))}catch(a){console.error(a)}},c.prototype.$dispatchListState=function(a){for(var b in a){var c=this.$itemKey[b];if(!c)return void console.error("["+this.$vmId+"] missing item key for '"+b+"'; add "+b+"_itemKey property to the view model.");var d=a[b];if(!d[c])return console.error("["+this.$vmId+"] couldn't dispatch data from '"+b+"' due to missing property '"+c+"'"),void console.error(d);for(var e in d)if(e!=c){var f={};f[b+".$"+d[c]+"."+e]=d[e],this.$dispatch(f)}this.$updateList(b,d)}},c.prototype.$loadHtmlView=function(a,c,d,e,f){ReactDOM.unmountComponentAtNode(document.querySelector(a)),b(a).load(c,null,function(){null!=d?b.getScript(d,function(){"function"==typeof f&&f.call(this)}):"function"==typeof f&&f.call(this)})},c.prototype.$loadReactView=function(a,c,d,e,f,g){var h=[];null==d?d="":(h=d.split(",").map(function(a){return b.getScript(a)}),h.push(b.Deferred(function(a){b(a.resolve)}))),b.when.apply(b,h).done(function(){if(!window.hasOwnProperty(c))return void console.error("["+this.$vmId+"] failed to load view '"+c+"' because it's not a React element.");var b=React.createElement(window[c],f);ReactDOM.render(b,document.querySelector(a)),"function"==typeof g&&g.call(this,b)})},c.prototype.$preProcess=function(a){var b=this;for(var c in a){var d=/(.*)_add/.exec(c);if(null==d){var d=/(.*)_update/.exec(c);if(null==d){var d=/(.*)_remove/.exec(c);if(null==d){var d=/(.*)_itemKey/.exec(c);if(null==d);else{var e=d[1],f={};f[e]=a[c],b.$setItemKey(f),delete a[c]}}else{var e=d[1];if(Array.isArray(this.State()[e])){var g=this.$itemKey[e];null!=g?b.$removeList(e,function(b){return b[g]==a[c]}):console.error("["+this.$vmId+"] missing item key for '"+e+"'; add "+e+"_itemKey property to the view model.")}else console.error("["+this.$vmId+"] '"+e+"' is not found or not an array.");delete a[c]}}else{var e=d[1];Array.isArray(this.State()[e])?b.$updateList(e,a[c]):console.error("["+this.$vmId+"] '"+e+"' is not found or not an array."),delete a[c]}}else{var e=d[1];Array.isArray(this.State()[e])?b.$addList(e,a[c]):console.error("unable to resolve "+c),delete a[c]}}},c.prototype.$request=function(){dotnetify.isConnected()&&(dotnetify.hubServer.request_VM(this.$vmId,this.$vmArg),this.$requested=!0)},c.prototype.$update=function(a){dotnetify.debug&&(console.log("["+this.$vmId+"] received> "),console.log(JSON.parse(a)),null!=dotnetify.debugFn&&dotnetify.debugFn(this.$vmId,"received",JSON.parse(a)));var c=JSON.parse(a);this.$preProcess(c);var d=this.State();d=b.extend(d,c),this.State(d),this.$loaded||this.$onLoad()},c.prototype.$onLoad=function(){for(var a in dotnetify.react.plugins){var b=dotnetify.react.plugins[a];"function"==typeof b.$ready&&b.$ready.apply(this)}this.$loaded=!0},c.prototype.$setItemKey=function(a){this.$itemKey=a},c.prototype.$addList=function(a,b){var c=this.$itemKey[a];if(null!=c){if(!b.hasOwnProperty(c))return void console.error("["+this.$vmId+"] couldn't add item to '"+a+"' due to missing property '"+c+"'");var d=this.State()[a].filter(function(a){return a[c]==b[c]});if(d.length>0)return void console.error("["+this.$vmId+"] couldn't add item to '"+listName+"' because the key already exists")}var e=this.State()[a];e.push(b);var f={};f[a]=e,this.State(f)},c.prototype.$removeList=function(a,b){var c={};c[a]=this.State()[a].filter(function(a){return!b(a)}),this.State(c)},c.prototype.$updateList=function(a,c){var d=this.$itemKey[a];if(null!=d){if(!c.hasOwnProperty(d))return void console.error("["+this.$vmId+"] couldn't update item to '"+a+"' due to missing property '"+d+"'");var e={};e[a]=this.State()[a].map(function(a){return a[d]==c[d]?b.extend(a,c):a}),this.State(e)}else console.error("["+this.$vmId+"] missing item key for '"+listName+"'; add "+listName+"_itemKey property to the view model.")},dotnetify.react.Scope=a.createClass({displayName:"Scope",propTypes:{vm:a.PropTypes.string},contextTypes:{scoped:a.PropTypes.func},childContextTypes:{scoped:a.PropTypes.func.isRequired,connect:a.PropTypes.func.isRequired},scoped:function(a){var b=this.context.scoped?this.context.scoped(this.props.vm):this.props.vm;return b?b+"."+a:a},getChildContext:function(){var a=this;return{scoped:function(b){return a.scoped(b)},connect:function(b,c,d,e,f){var g="function"==typeof d?d:function(){return c.state},h="function"==typeof e?e:function(a){return c.setState(a)};return"function"!=typeof d&&(f=d),c.vmId=a.scoped(b),c.vm=dotnetify.react.connect(c.vmId,c,g,h,f),c.dispatch=function(a){return c.vm.$dispatch(a)},c.dispatchState=function(a){h(a),c.vm.$dispatch(a)},window.vmStates?window.vmStates[c.vmId]:null}}},render:function(){return this.props.children}}),dotnetify});